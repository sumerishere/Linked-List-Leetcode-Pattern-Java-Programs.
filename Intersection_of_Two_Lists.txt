4. Intersection of Two Linked Lists  (https://leetcode.com/problems/intersection-of-two-linked-lists/)


    Sample Test case : 
                        Input: intersectVal = 2,listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1
                        Output: Intersected at '2'

              Explanation: The intersected node's value is 2 (note that this must not be 0 if the two lists intersect).
                           From the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes   
                           before the intersected node in A; There are 1 node before the intersected node in B.
   

    Solution :
                 
               public class Solution {
                  public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        
                     ListNode pointer_A = headA;
                     ListNode pointer_B = headB;
        
                     while(pointer_A != pointer_B){
           
                       if(pointer_A==null){
                           pointer_A = headB;
                       }else{
                           pointer_A = pointer_A.next;
                       }
            
                       if(pointer_B==null){
                           pointer_B = headA;
                       }else{
                           pointer_B = pointer_B.next;
                       }
                    }
                    return pointer_A;
                   }
                 }